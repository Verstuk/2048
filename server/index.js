require('dotenv').config(); // –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

const { Telegraf } = require('telegraf');
const express = require('express');
const app = express();
app.use(express.json());

const bot = new Telegraf(process.env.BOT_TOKEN);
let leaderboard = [];

// API –¥–ª—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
app.post('/api/leaderboard', (req, res) => {
  const { userId, score } = req.body;
  leaderboard.push({ userId, score });
  leaderboard = [...new Set(leaderboard)]
    .sort((a, b) => b.score - a.score)
    .slice(0, 10);
  res.send({ success: true });
});

app.get('/api/leaderboard', (req, res) => {
  res.send(leaderboard);
});

// –ö–æ–º–∞–Ω–¥–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
bot.command('start', (ctx) => {
  ctx.reply('üéÆ 2048 –≤ Telegram!', {
    reply_markup: {
      inline_keyboard: [
        [{ text: "–ò–≥—Ä–∞—Ç—å", web_app: { url: process.env.WEBAPP_URL } }],
        [{ text: "–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤", callback_data: "show_leaderboard" }]
      ]
    }
  });
});

bot.action('show_leaderboard', async (ctx) => {
  const leaders = leaderboard.map((u, i) => `${i+1}. ID${u.userId}: ${u.score}`).join('\n');
  ctx.reply(`üèÜ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤:\n${leaders || '–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!'}`);
});

app.use(express.static('client'));
bot.launch();
app.listen(3000, () => console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000'));